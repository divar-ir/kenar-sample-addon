"""
Django settings for kenar_sample_addon project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path
from .util import to_bool

from cryptography.fernet import Fernet

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET", default="6c!n8n4pxpd+p76x#b9dp-++4p!96naljx4&im$)cpn-no3d&2")

# Always set this in env in production
ENCRYPTION_KEY = os.environ.get("ENCRYPTION_SECRET", Fernet.generate_key().decode()).encode()

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = to_bool(os.environ.get("DEBUG", default=True))
DEBUG_TOKEN = ""

# SECURITY WARNING: admin can cause security hole in big companies:D
ADMIN_ENABLED = to_bool(os.environ.get("ADMIN_ENABLED", default=False))

HOST = os.environ.get("HOST", default="localhost:8000")

if DEBUG:
    # noinspection HttpUrlsUsage
    HOST_PREFIX = 'http://'
else:
    HOST_PREFIX = 'https://'

CSRF_TRUSTED_ORIGINS = [HOST_PREFIX + HOST, ]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'kenar_sample_addon.real_estate_verification',
    'kenar_sample_addon.oauth',
    'kenar_sample_addon.background_check'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",  # TODO: remove when cdn is fixed
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'kenar_sample_addon.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['kenar_sample_addon', BASE_DIR / 'kenar_sample_addon' / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

STATICFILES_DIRS = [
    BASE_DIR / "kenar_sample_addon" / "static",
]

WSGI_APPLICATION = 'kenar_sample_addon.wsgi.application'

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# STORAGES = {
#     "staticfiles": {
#         "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
#     },
# }

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = os.environ.get('STATIC_URL', '/static/')

STATIC_ROOT = BASE_DIR / "static"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

OAUTH_INFO_SESSION_KEY = 'oauth_state'

# ESKAN settings
ESKAN_API_KEY = os.environ.get("ESKAN_API_KEY", "YOUR API KEY")
AMLAK_ESKAN_URL = os.environ.get('AMLAK_ESKAN_URL', 'https://amlakservice.mrud.ir/')


DIVAR_RPC_ENABLED = to_bool(os.environ.get("DIVAR_RPC_ENABLED", True))

if DIVAR_RPC_ENABLED:
    from divar_rpc import init
    from rpc_lib.context import ThreadContextHolder

    init("verification-addon", ThreadContextHolder())

